name: Salesforce Deployment V2
description: Deployment script to build and deploy metadata to a specific Salesforce environment
author: csilva-intakedesk
branding:
    icon: terminal
    color: red
inputs:
    TEST_LEVEL:
        description: Salesforce project deploy --test-level parameter. Defaults to RunLocalTests.
        type: choice
        default: RunLocalTests
        options:
            - NoTestRun
            - RunSpecifiedTests
            - RunLocalTests
            - RunAllTestsInOrg
    TIMEOUT:
        description: Salesforce project deploy --wait flag value. Timeout in minutes for the command to complete and display results. Defaults to 30.
        type: number
        default: 30
    MANIFEST_SOURCE_DIRECTORY:
        description: Source files path for project manifest generation --source-dir flag. Defaults to force-app.
        type: string
        default: force-app
    MANIFEST_OUTPUT_DIRECTORY:
        description: Output directory for project manifest generation --output-dir flag. Defaults to manifest.
        type: string
        default: manifest
    PACKAGE_SOURCE_DIRECTORY:
        description: Salesforce project deploy --manifest file path flag. Defaults to manifest/package.xml
        type: string
        default: manifest/package.xml
    DELTA_SOURCE_DIRECTORY:
        description: Salesforce project deploy --manifest file path flag with the delta changes. Defaults to package/package.xml
        type: string
        default: package/package.xml
    DELTA_FROM_SOURCE:
        description: The from source that will be used on the sgd delta.
        type: string
        required: true
    DELTA_TO_SOURCE:
        description: The to source that will be used on the sgd delta.
        type: string
        required: true
    SF_AUTH_URL:
        description: The Salesforce Auth URL
        type: string
        required: true
    SF_AUTH_USERNAME:
        description: The Salesforce username for login. Salesforce project deploy `-o` flag.
        type: string
        required: true

runs:
    using: composite
    steps:
        - name: Printing Github Variables in debug mode
          shell: bash
          run: |
              echo "::debug:: CI : $CI"
              echo "::debug::GITHUB_WORKFLOW : $GITHUB_WORKFLOW"
              echo "::debug::GITHUB_RUN_ID : $GITHUB_RUN_ID"
              echo "::debug::GITHUB_RUN_NUMBER : $GITHUB_RUN_NUMBER"
              echo "::debug::GITHUB_ACTION : $GITHUB_ACTION"
              echo "::debug::GITHUB_ACTIONS : $GITHUB_ACTIONS"
              echo "::debug::GITHUB_ACTOR : $GITHUB_ACTOR"
              echo "::debug::GITHUB_REPOSITORY : $GITHUB_REPOSITORY"
              echo "::debug::GITHUB_EVENT_NAME : $GITHUB_EVENT_NAME"
              echo "::debug::GITHUB_EVENT_PATH : $GITHUB_EVENT_PATH"
              echo "::debug::GITHUB_WORKSPACE : $GITHUB_WORKSPACE"
              echo "::debug::GITHUB_SHA : $GITHUB_SHA"
              echo "::debug::GITHUB_REF : $GITHUB_REF"
              echo "::debug::GITHUB_HEAD_REF : $GITHUB_HEAD_REF"
              echo "::debug::GITHUB_BASE_REF : $GITHUB_BASE_REF"
              echo "::debug::GITHUB_SERVER_URL : $GITHUB_SERVER_URL"
              echo "::debug::GITHUB_API_URL : $GITHUB_API_URL"
              echo "::debug::GITHUB_GRAPHQL_URL : $GITHUB_GRAPHQL_URL"
              echo "::debug::BRANCH_NAME : ${{ github.event.pull_request.head.ref }}"
              echo "::debug::GITHUB_REF : $GITHUB_REF"

        - name: Install Salesforce CLI
          shell: bash
          run: |
              npm install -g @salesforce/cli
              sf --version

        - name: Installing SF Git Delta Plugin
          shell: bash
          run: |
              echo y | sf plugins install sfdx-git-delta
              sf plugins

        - name: Installing Java
          shell: bash
          run: |
              sudo apt-get update
              sudo apt install default-jdk

        - name: Environment Login
          shell: bash
          run: |
              sf org login sfdx-url --set-default --sfdx-url-file <(echo "${{ inputs.SF_AUTH_URL }}")

        - name: "Checkout source code"
          uses: actions/checkout@v4

        - name: Get changed files
          id: changed-files
          uses: tj-actions/changed-files@v45.0.1

        - name: Creating Delta packages for new, modified or deleted metadata
          shell: bash
          run: |
              echo "::debug::Command being executed: sf sgd source delta --from \"${{ inputs.DELTA_FROM_SOURCE }}\" --to \"${{ inputs.DELTA_TO_SOURCE }}\" --output . --source ${{ inputs.MANIFEST_SOURCE_DIRECTORY }}/ --generate-delta"
              sf sgd source delta --from "${{ inputs.DELTA_FROM_SOURCE }}" --to "${{ inputs.DELTA_TO_SOURCE }}" --output . --source ${{ inputs.MANIFEST_SOURCE_DIRECTORY }}/ --generate-delta

        - name: Environment Package(s) Deployment
          run: python3 salesforce-deployment.py
          env:
              DRY_RUN: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
              TEST_LEVEL: ${{ inputs.TEST_LEVEL }}
              TIMEOUT: ${{ inputs.TIMEOUT }}
              DELTA_FROM_SOURCE: ${{ inputs.DELTA_FROM_SOURCE }}
              DELTA_TO_SOURCE: ${{ inputs.DELTA_TO_SOURCE }}
              SF_AUTH_USERNAME: ${{ inputs.SF_AUTH_USERNAME }}
              DELTA_SOURCE_DIRECTORY: ${{ inputs.DELTA_SOURCE_DIRECTORY }}
              ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          shell: bash

        - name: SKUID Pages Deployment
          run: python3 skuid-deployment.py
          env:
              ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
              TARGET_USERNAME_ALIAS: ${{ inputs.TARGET_USERNAME_ALIAS }}
          shell: bash
